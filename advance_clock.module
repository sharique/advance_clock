<?php

/**
 * @file
 * This module provides advanced clock block which is user configurable
 */

/**
 * Implements hook_help().
 */
function advance_clock_help($path) {
  switch ($path) {
    case 'admin/help#advance_clock':
      return t('<h3> Welcome to Advance Clock help</h3> <p>As the name suggests this module gets you the advance and user configurable functionalities clock</p>
        <p>This module provides
        <ol> <li> A customizable clock block plugin.</li>
        <li> This module will also provide per user configurable clock.</li> </ol>
        </p>'
      );
  }
}

/**
 * Implements hook_permission().
 */
function advance_clock_permission() {
  return array(
    'set advance clock' => array(
      'title' => t('Add Advance Clock'),
    ),
    'edit advance clock' => array(
      'title' => t('Edit Advance Clock'),
    ),
    'configure advance clock' => array(
      'title' => t('Configure Advance Clock'),
    ),
  );
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function advance_clock_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_menu().
 */
function advance_clock_menu() {
  // Link to administer advance clock module.
  $items['admin/config/user-interface/advance-clock'] = array(
    'title' => t('Advance Clock'),
    'description' => t('Advance Clock settings'),
    'position' => 'right',
    'weight' => 1,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  $items['admin/config/user-interface/advance-clock/advance-clock-settings'] = array(
    'title' => t('Advance Clock settings'),
    'description' => t('Advance Clock configurations tools.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('advance_clock_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'weight' => 2,
    'file' => 'advance_clock.admin.inc',
  );

  $items['user/%user/add-clock'] = array(
    'title' => t('Clock'),
    'description' => t('Advance Clock configurations tools.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('advance_clock_add_clock_form'),
    'access arguments' => array('set advance clock'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implementation of hook_theme()
 */
function advance_clock_theme($existing, $type, $theme, $path) {
  if ($type == 'module') {
    $templates = array(
      'digital_clocks' => array(
        'variables' => array(),
        'template' => '/template/digital-clocks',
      ),
      'analog_clocks' => array(
        'variables' => array(),
        'template' => '/template/analog-clocks',
      ),
    );
    return $templates;
  }
}

function advance_clock_add_clock_form($form) {

  // Text field
  $form['clock_zone'] = array(
    '#title' => t('Select Clock\'s Zones'),
    '#type' => 'checkboxes',
    '#options' => _advance_clock_get_clocks(),
    '#default_value' => _advance_clock_get_user_clocks(),
    '#required' => TRUE,
  );
  // Submit
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Save',
  );
  $form['#validate'][] = 'advance_clock_add_clock_form_validate';
  return $form;
}

/**
 * Form validation handler for hook_validate().
 */
function advance_clock_add_clock_form_validate($form, &$form_state) {
  //Number of counts for user
  $user_clocks = count(array_filter($form_state['values']['clock_zone']));
  if ($user_clocks > variable_get('advance_clock_count')) {
    form_set_error('clock_zone', t('Only @clock clock(s) allowed.', array('@clock' => variable_get('advance_clock_count', 1))));
  }
}

function advance_clock_add_clock_form_submit($form, &$form_state) {
  global $user;
  $user_clocks = _advance_clock_get_user_clocks();
  $zones = implode(',', array_filter($form_state['values']['clock_zone']));
  if (count($user_clocks)) {
    $num_updated = db_update('advance_clock')
      ->fields(array('clock_zone' => $zones))
      ->condition('uid', $user->uid, '=')
      ->execute();
  }
  else {
    $query_advance_clock = db_insert('advance_clock')
      ->fields(array(
        'uid' => $user->uid,
        'clock_zone' => $zones,
        'timestamp' => time()
      ))->execute();
  }
}

function _advance_clock_get_user_clocks() {
  global $user;
  $advance_user_clock = array();
  if ($user->uid != 0) {
    $query_advance_clock_list = db_select('advance_clock', 'ac');
    $query_advance_clock_list->fields('ac', array('clock_zone'));
    $query_advance_clock_list->condition('ac.uid', $user->uid, '=');
    $advance_clock_result = $query_advance_clock_list->execute()->fetchAll();
    if (count($advance_clock_result)) {
      $advance_user_clock = explode(',', $advance_clock_result[0]->clock_zone);
    }
  }
  return $advance_user_clock;
}

function _advance_clock_get_clocks($blank = NULL) {
  $zonelist = timezone_identifiers_list();
  $zones = $blank ? array('' => t('- None selected -')) : array();
  foreach ($zonelist as $zone) {
    // Because many time zones exist in PHP only for backward compatibility
    // reasons and should not be used, the list is filtered by a regular
    // expression.
    if (preg_match('!^((Africa|America|Antarctica|Arctic|Asia|Atlantic|Australia|Europe|Indian|Pacific)/|UTC$)!', $zone)) {
      $timezoneTable[format_date(REQUEST_TIME, 'custom', ' O', $zone) / 100 . '|' . $zone] = t('(GMT@date) @zone,', array(
        '@zone' => t(str_replace('_', ' ', $zone)),
        '@date' => format_date(REQUEST_TIME, 'custom', ' O', $zone),
        '@d' => format_date(REQUEST_TIME, 'custom', ' O', $zone) / 100
      ));
    }
  }
  asort($timezoneTable);
  return $timezoneTable;
}

/**
 * hook_block_info.
 */
function advance_clock_block_info() {
  // This example comes from node.module.
  $blocks['advance_clock_user_clock'] = array(
    'info' => t('Clocks'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * hook_block_view.
 */
function advance_clock_block_view($delta = '') {
  // This example is adapted from node.module.
  $block = array();
  global $user;
  switch ($delta) {
    case 'advance_clock_user_clock':
      $block['subject'] = t('Clocks');
      $block['content'] = _advance_clock_clock_list();
      $block['content'] .= l('Configure Clocks', 'user/' . $user->uid . '/add-clock');
      break;
  }
  return $block;
}

function _advance_clock_clock_list() {

  $users_clocks = _advance_clock_get_user_clocks();
  $module_path = drupal_get_path('module', 'advance_clock');
  $allowed_clock_count = variable_get('advance_clock_count');
  $show_date = variable_get('advance_clock_show_date');
  $show_secs = variable_get('advance_clock_show_secs');
  $show_city = variable_get('advance_clock_show_only_city');
  $clock_type = variable_get('advance_clock_type', 0);
  $hr_format = variable_get('advance_clock_hour24');

  $configured_clocks = count($users_clocks);

  if ($allowed_clock_count < $configured_clocks) {
    drupal_set_message('Please configure clocks', 'warning');
    $configured_clocks = $allowed_clock_count;
  }

  $output = '';

  $settings = array(
    'show_date' => $show_date,
    'show_city' => $show_city,
    'show_sec' => $show_secs,
    'hr_format' => $hr_format,
  );
  libraries_load('moment', 'with-locales.min');
  libraries_load('moment-timezone', 'with-data.min');
  drupal_add_css($module_path . '/css/advance-clock.css');
  drupal_add_js(array('advance_clock' => array('settings' => $settings)), 'setting');
  $clocks = array();
  foreach ($users_clocks as $key => $zone) {
    $user_zone = explode('|', $zone);
    $clocks[$key]['timezone'] = $user_zone[1];
    $clocks[$key]['timediff']=$user_zone[0];
    $user_city = explode('/', $zone);
    $clocks[$key]['city'] = $user_city[1];
  }
  if ($clock_type == 0) {
    $output .= theme('digital_clocks', array(
      'clocks' => $clocks,
      'settings' => $settings,
    ));
    drupal_add_js($module_path . '/js/digital-clock.js');
  }
  else {
    $output .= theme('analog_clocks', array(
      'clocks' => $clocks,
      'settings' => $settings,
    ));
    drupal_add_js($module_path . '/js/analog-clock.js');
  }
  return $output;
}
